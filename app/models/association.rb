class Association < ActiveRecord::Base
  attr_accessible :associator_id, :associated_id
  
  belongs_to :associator, :class_name => "Translation"
  belongs_to :associated, :class_name => "Translation"
  
  validates :associator_id, :presence => true
  validates :associated_id, :presence => true
  
  #auto create reciprocal association between translations
  after_create :reciprocrate_association
  after_destroy :kill_association
  
  def reciprocrate_association
    associate.associates << translation unless associate.associates.include?(translation)
  end
  
  def kill_association
    associate.associates.delete(translation)
  end
  
  
end
#--
# generated by 'annotated-rails' gem, please do not remove this line and content below, instead use `bundle exec annotate-rails -d` command
#++
# Table name: associations
#
# * id            :integer         not null
#   associator_id :integer
#   associated_id :integer
#   created_at    :datetime        not null
#   updated_at    :datetime        not null
#
#  Indexes:
#   index_associations_on_associator_id_and_associated_id  associator_id,associated_id  unique
#   index_associations_on_associated_id                    associated_id
#   index_associations_on_associator_id                    associator_id
#--
# generated by 'annotated-rails' gem, please do not remove this line and content above, instead use `bundle exec annotate-rails -d` command
#++
