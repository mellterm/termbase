class Group < ActiveRecord::Base
  attr_accessible :type, :name
  attr_writer :secure_code
  has_many :memberships
  has_many :users, :through => :memberships
  
  has_many :translations
  
  has_many :authorities, :as => :authoritable
  
  accepts_nested_attributes_for :translations
  
  before_save :encrypt_secure_code
  
  def has_secure_code?(submitted_secure_code)
    encrypted_secure_code == encrypt(submitted_secure_code)
  end
  
  def self.authenticate(name, submitted_secure_code)
    group = find_by_name(name)
    return nil if group.nil?
    return group if group.has_secure_code?(submitted_secure_code)
  end
  
  def secure_code
    @secure_code || SecureRandom.hex(3)
  end  

  
  private
  
     def encrypt_secure_code
       self.salt = make_salt if new_record?
       self.encrypted_secure_code = encrypt(secure_code)
     end
     
     def encrypt(string)
       secure_hash("#{salt}--#{string}")
     end
     
     def make_salt
       secure_hash("#{Time.now.utc}--#{secure_code}")
     end
     
     def secure_hash(string)
       Digest::SHA2.hexdigest(string)
     end
  
  
  
  
  
  
end
#--
# generated by 'annotated-rails' gem, please do not remove this line and content below, instead use `bundle exec annotate-rails -d` command
#++
# Table name: groups
#
# * id                    :integer         not null
#   group_type            :string(255)
#   created_at            :datetime        not null
#   updated_at            :datetime        not null
#   name                  :string(255)
#   encrypted_secure_code :string(255)
#   salt                  :string(255)
#--
# generated by 'annotated-rails' gem, please do not remove this line and content above, instead use `bundle exec annotate-rails -d` command
#++
