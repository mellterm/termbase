class Group < ActiveRecord::Base
  attr_accessible :type, :name, :access_code, :owner_profile_id, :owner_id



  has_many :memberships
  has_many :users, :through => :memberships
  
  has_one :owner, :class_name => 'User'
  has_one :owner_profile, :class_name => 'Profile'
  
  has_many :translations
  
  has_many :authorities, :as => :authoritable
  
  accepts_nested_attributes_for :translations
  
  before_save :generate_access_code
    
  private
  
     def generate_access_code
       #also handles duplicates, self because refers to group not instance var
       begin
         self.access_code = SecureRandom.urlsafe_base64(5)
       end while self.class.exists?(access_code: access_code)
    end
        
  
end
#--
# generated by 'annotated-rails' gem, please do not remove this line and content below, instead use `bundle exec annotate-rails -d` command
#++
# Table name: groups
#
# * id               :integer         not null
#   group_type       :string(255)
#   created_at       :datetime        not null
#   updated_at       :datetime        not null
#   name             :string(255)
#   access_code      :string(255)
#   owner_id         :integer
#   owner_profile_id :integer
#--
# generated by 'annotated-rails' gem, please do not remove this line and content above, instead use `bundle exec annotate-rails -d` command
#++
